---
spring:
  application:
    name: "sample-worker"
  config:
    activate:
      on-profile: default
  output:
    ansi:
      enabled: DETECT
  main:
    banner-mode: "off"
  jackson:
    mapper:
      accept-case-insensitive-enums: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    listener:
      ack-mode: MANUAL_IMMEDIATE
      concurrency: ${KAFKA_CONSUMER_CONCURRENCY:1}
    consumer:
      enable-auto-commit: false
      auto-offset-reset: earliest
      group-id: ${spring.application.name}
      # Configures the Spring Kafka ErrorHandlingDeserializer that delegates to the 'real' deserializers
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        "spring.json.trusted.packages": "*"
        # Delegate deserializers
        "spring.deserializer.key.delegate.class": org.apache.kafka.common.serialization.StringDeserializer
        "spring.deserializer.value.delegate.class": org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

sample:
  hello:
    topic-name: sample.hello
    group-id: sample.hello_consumer

management:
  server:
    port: 8001
  endpoints:
    web:
      cors:
        allowed-origins: '*'
        allowed-headers: '*'
        allowed-methods: 'OPTIONS, GET, POST'
      exposure:
        include: '*'
  endpoint:
    metrics:
      enabled: true
  security:
    enabled: false

module.version: ${DOCKER_IMAGE_TAG:LATEST}

logging.level.org.springframework.web: ${LOGGING_LEVEL:ERROR}
